type Query {
  episodes(filter: EpisodeFilter): [Episode!]!
  episode(id: ID!): Episode
  characters(filter: CharacterFilter): [Character!]!
  character(id: ID!): Character
  crimes(filter: CrimeFilter): [Crime!]!
  crime(id: ID!): Crime
  seasons(filter: SeasonFilter): [Season!]!
  season(id: ID!): Season
  quotes(filter: QuoteFilter): [Quote!]!
  quote(id: ID!): Quote
}

type Episode {
  id: ID!
  episodeNumber: Int!
  title: String!
  imdbRating: Float
  viewerRating: Float
  description: String
  seasonId: Int!
  airDate: String
  characters: [Character!]!
  crimes: [Crime!]!
  season: Season!
  quotes: [Quote!]!
}

type Season {
  id: ID!
  seasonNumber: Int!
  imdbRating: Float
  viewerRating: Float
  airDate: DateTime
  episodes: [Episode!]!
  characters: [Character!]!
  crimes: [Crime!]!
  quotes: [Quote!]!
}

type Character {
  id: ID!
  name: String!
  description: String
  imageUrl: String
  episodes: [Episode!]!
  seasons: [Season!]!
  crimes: [Crime!]!
  quotes: [Quote!]!
}

type Crime {
  id: ID!
  type: String!
  victim: String!
  description: String!
  severity: String!
  episodes: [Episode!]!
  seasons: [Season!]!
  characters: [Character!]!
  quotes: [Quote!]!
}

type Quote {
  id: ID!
  text: String!
  characterId: Int!
  episodeId: Int!
  seasonId: Int!
  character: Character!
  episode: Episode!
  season: Season!
}

input EpisodeFilter {
  seasonNumber: Int
  episodeNumber: Int
  hasDeaths: Boolean
  imdbRating: Float
  viewerRating: Float
  characterAppearances: [String!]
}

input SeasonFilter {
  seasonNumber: Int
  imdbRating: Float
  viewerRating: Float
  airDate: DateTime
}

input CharacterFilter {
  name: String
  hasCrimes: Boolean
  seasonAppearances: [Int!]
  episodeAppearances: [Int!]
  quotes: [String!]
}

input CrimeFilter {
  type: String
  victim: String
  severity: String
  episodeAppearances: [Int!]
  seasonAppearances: [Int!]
}

input QuoteFilter {
  characterId: Int
  episodeId: Int
  seasonId: Int
  textContains: String
  hasCharacter: Boolean
  hasEpisode: Boolean
  hasSeason: Boolean
}
