// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Episode {
  id            Int         @id @default(autoincrement())
  episodeNumber Int
  title         String
  imdbRating    Float?
  viewerRating  Float?
  hasDeaths     Boolean
  description   String?
  seasonId      Int
  airDate       DateTime
  season        Season      @relation(fields: [seasonId], references: [id])
  crimes        Crime[] // Implicit many-to-many relation with Crime
  characters    Character[] // Implicit many-to-many relation with Character
  quotes        Quote[] // One-to-many relation with Quote

  @@unique([seasonId, episodeNumber])
}

model Season {
  id           Int       @id @default(autoincrement())
  seasonNumber Int       @unique
  imdbRating   Float?
  viewerRating Float?
  airDate      DateTime
  episodes     Episode[] // One-to-many relation with Episode
}

model Character {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  imageUrl    String?
  quotes      Quote[] // One-to-many relation with Quote
  // Possibly will explicitly add a relation later
  crimes      Crime[] // Implicit many-to-many
  episodes    Episode[] // Implicit many-to-many
}

model Crime {
  id          Int         @id @default(autoincrement())
  type        String
  victim      String
  description String?
  severity    String?
  episodes    Episode[] // Implicit many-to-many
  characters  Character[] // Implicit many-to-many 

  @@unique([type, victim]) // Prevents duplicate crimes with same name and description
}

model Quote {
  id          Int       @id @default(autoincrement())
  text        String
  characterId Int
  character   Character @relation(fields: [characterId], references: [id])
  episodeId   Int
  episode     Episode   @relation(fields: [episodeId], references: [id])

  @@unique([text, characterId, episodeId]) // prevents same quote by same person in same episode
}
